@model AllProductsQueryModel

@{
    ViewBag.Title = "All Products";
}

@{
    string ShortenDescription(string input)
    {
        return input.Length > 100 ? input.Substring(0, 100) + "..." : input;
    }
}


<form method="get">
    <div class="row">
        <div class="form-group col-md-4">
            <div class="form-group">
                <label asp-for="Brand">Filter by Brand</label>
                <select asp-for="Brand" class="form-control">
                    <option value="">@ViewBag.Title</option>

                    @foreach (var brand in Model.Brands)
                    {
                        <option value="@brand">@brand</option>
                    }
                </select>
            </div>
        </div>

        <div class="form-group col-md-4 mb-5">
            <label asp-for="SearchTerm">Search</label>
            <input asp-for="SearchTerm" class="form-control" placeholder="Enter search terms and press Enter...">
        </div>

        <div class="form-group col-md-4">
            <div class="form-group">
                <label asp-for="Sorting">Sort products by:</label>
                <select asp-for="Sorting" class="form-control">
                    <option value="0" selected>Date Created</option>
                    <option value="1">Price</option>
                    <option value="2">Brand and Name</option>
                </select>
            </div>
        </div>
    </div>
</form>

<div class="card-group">
    @foreach (var product in Model.Products)
    {
        <div class="card" style="width: 18rem; outline-offset: 10px">
            <img class="card-img-top" style="width: 100%; height: 10vw; object-fit: scale-down;" src="@product.ImageUrl" alt="@product.Brand @product.Name">
            <div class="card-body col-sm-12 col-md-12 col-lg-12" style="height: 10vw">
                <h5 class="card-title">@product.Brand @product.Name</h5>
                <p class="card-text d-sm-none d-md-block">@ShortenDescription(product.Description)</p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">@product.Location</li>
                <li class="list-group-item">@product.CategoryName</li>
                <li class="list-group-item">@product.LendingPrice lv.</li>
            </ul>
            <div class="card-body">
                <a asp-controller="Products" asp-action="Details" asp-route-id="product.Id" class="btn btn-primary">Details</a>
                @if (ViewBag.AllowProductEdit == true || User.IsInRole(WebConstants.AdministratorRoleName))
                {
                    <a asp-controller="Products" asp-action="Edit" asp-route-id="@product.Id" class="btn btn-warning">Edit</a>
                    <a asp-controller="Products" asp-action="Details" asp-route-id="@product.Id" class="btn btn-danger">Delete</a>
                }
            </div>
        </div>
    }
</div>


@if (!Model.Products.Any())
{
    <h2 class="text-center">No products to show currently!</h2>
}

@{
    var previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    var totalPages = Math.Ceiling((double)Model.TotalProducts / AllProductsQueryModel.ProductsPerPage);
}

<nav aria-label="Page navigation">
    <ul class="pagination mt-3">
        <li class="page-item @(Model.CurrentPage <= 1 ? "disabled" : string.Empty)">
            <a class="page-link"
               asp-controller="Products"
               asp-action="All"
               asp-route-CurrentPage="@previousPage"
               asp-route-Brand="@Model.Brand"
               asp-route-SearchTerm="@Model.SearchTerm"
               asp-route-Sorting="@((int)Model.Sorting)">Previous</a>
        </li>
        <li class="page-item disabled"><a class="page-link" href="#">Current page: @Model.CurrentPage</a></li>
        <li class="page-item @(Model.CurrentPage >= totalPages ? "disabled" : string.Empty)">
            <a class="page-link"
               asp-controller="Products"
               asp-action="All"
               asp-route-CurrentPage="@(Model.CurrentPage +1)"
               asp-route-Brand="@Model.Brand"
               asp-route-SearchTerm="@Model.SearchTerm"
               asp-route-Sorting="@((int)Model.Sorting)">Next</a>
        </li>
    </ul>
</nav>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
